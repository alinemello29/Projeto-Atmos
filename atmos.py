# -*- coding: utf-8 -*-
"""Cópia de atmo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e2cJF96pOni2NgNtuOoeaH739QT6YD68
"""

!pip install paho-mqtt
!pip install psycopg2

import random
from paho.mqtt import client as mqtt_client
import time
import json
import psycopg2
import time

#configurações para conexão
broker = 'broker.hivemq.com'
port = 1883
topic = "/atmos-message"
client_id = f'python-mqtt-{random.randint(0, 1000)}'

#função de conexão
def connect_mqtt() -> mqtt_client:
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(client_id)
    client.username_pw_set('', '')
    client.on_connect = on_connect
    client.connect(broker, port)
    return client

def conectar_database(conn, list_values):
  aux = str(list_values).replace('[','').replace(']','').replace("'","")
  sc = "'"
  sql = '''
          INSERT INTO dados (mac, date, va,vb,vc, ia,ib,ic, wa,wb,wc) VALUES('''+sc+str(list_values[0])+sc+''',
          '''+sc+str(list_values[1].replace("-","-").replace("T"," ").replace("Z",""))+sc+''',
          '''+str(list_values[2])+''','''+str(list_values[3])+''','''+str(list_values[4])+''',
          '''+str(list_values[5])+''','''+str(list_values[6])+''','''+str(list_values[7])+''',
          '''+str(list_values[8])+''','''+str(list_values[8])+''','''+str(list_values[10])+'''
          );
          '''
  
 
  try:
    cur = conn.cursor()
    cur.execute(sql)
    conn.commit()
    time.sleep(3)
    cur.close()
    time.sleep(3)
  except:
    print('Nao inserido ao banco de dados')

#função de solicitação
def subscribe(conn, client: mqtt_client):
    def on_message(client, userdata, msg):
        #conectar_database(list_values)
        data = json.loads(msg.payload.decode())
        aux = []
        aux.append(data['mac'])
        aux.append(data['date'])
        aux.append(data['va'])
        aux.append(data['vb'])
        aux.append(data['vc'])
        aux.append(data['ia'])
        aux.append(data['ib'])
        aux.append(data['ic'])
        aux.append(data['wa'])
        aux.append(data['wb'])
        aux.append(data['wc'])
        
        conectar_database(conn, aux)
        
        #print(f"Received `{msg.payload.decode()}` from `{msg.topic}` topic")

    client.subscribe(topic)
    client.on_message = on_message

client = connect_mqtt()
conn = psycopg2.connect("postgres://qftsmuas:uCC2WazDM7sC4j6wAzRu64-DsTAgyKGM@peanut.db.elephantsql.com/qftsmuas")
subscribe(conn, client)
client.loop_forever()