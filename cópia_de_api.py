# -*- coding: utf-8 -*-
"""CÃ³pia de api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10t4eI0Hq10HtGrLXVKcG65p0o_IOudBQ
"""

!pip install flask-ngrok
!pip install psycopg2

import psycopg2
import time

def conectar_database(conn, mac, dt_inicio, dt_fim):
  r = 'None'
  print('conect')
  sql = '''SELECT * FROM dados 
          WHERE
          mac = '''+mac+'''
          AND (date => '''+dt_inicio.replace("T"," ").replace("Z","")+'''
               OR date => '''+dt_inicio.replace("T"," ").replace("Z","")+''')
  '''
  

  

  cursor = conn.cursor()
  cursor.execute(sql)
  r = cursor.fetchall()
  time.sleep(3)
  return r

from google.colab.output import eval_js

print('Exemplo de chamada')
print(eval_js("google.colab.kernel.proxyPort(5000)")+"api/?mac=DE:DD:26:74:3D:70&dt_inicio=2022-10-28T19:21:08&dt_fim=2022-10-28T19:22:08")

from flask import Flask, jsonify, request
from flask_ngrok import run_with_ngrok

app = Flask(__name__)

@app.route("/api/" , methods=['GET'])
def home():
  if request.method == 'GET':
    aux = "'"
    mac = request.args.get('mac')
    dt_inicio = request.args.get('dt_inicio')
    dt_fim = request.args.get('dt_fim')

    conn = psycopg2.connect("postgres://qftsmuas:uCC2WazDM7sC4j6wAzRu64-DsTAgyKGM@peanut.db.elephantsql.com/qftsmuas")
    sql = '''SELECT * FROM dados 
          WHERE
          mac = '''+aux+mac+aux+'''
          AND (date BETWEEN '''+aux+dt_inicio.replace("T"," ").replace("Z","")+aux+'''
               AND '''+aux+dt_fim.replace("T"," ").replace("Z","")+aux+''')
    '''

  
    cursor = conn.cursor()
    cursor.execute(sql)
    r = cursor.fetchall()

    list_restult = []

    if len(r)==1:
      result = r[0]
      d = {'mac': result[1],
            'date': result[2],
            'va': result[3],
            'vb': result[4],
            'vc': result[5],
            'ia': result[6],
            'ib': result[7],
            'ic': result[8],
            'wa': result[9],
            'wb': result[10],
            'wc': result[11],
            }
      list_restult.append(d)
    else:
      for result in r:

        d = {'mac': result[1],
            'date': result[2],
            'va': result[3],
            'vb': result[4],
            'vc': result[5],
            'ia': result[6],
            'ib': result[7],
            'ic': result[8],
            'wa': result[9],
            'wb': result[10],
            'wc': result[11],
            }
        list_restult.append(d)
    conn.close()
    return jsonify(items=list_restult)
    
app.run()